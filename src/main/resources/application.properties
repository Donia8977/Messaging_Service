spring.application.name=MessageService


spring.datasource.url=jdbc:mysql://localhost:3306/message_service_db?useSSL=false&serverTimezone=UTC
spring.datasource.username=springstudent
spring.datasource.password=springstudent

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# --- SECURITY ---
security.jwt.secret=lWGrFyLc7RJYHmj3htykYoIAnrgKet7E1eWCOp34kJdtAedGGF+t3VAS9YC19kGSZwrHs5lSoinPVopPfvSLxg==
security.jwt.expiration-ms=3600000

# --- LOGGING ---
logging.level.root=INFO
logging.level.com.example.MessageService=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG



#choose the correct profile for your environment (kafka or nats)
spring.profiles.active=kafka


# --- NATS SETTINGS ---




# --- KAFKA SETTINGS ---
spring.kafka.bootstrap-servers=localhost:9092

# Tell the Spring Kafka producer to use our custom partitioner class
spring.kafka.producer.properties.partitioner.class=com.example.MessageService.message.kafka.partitioner.TenantIdPartitioner

# --- PRODUCER SETTINGS ---
# The key is the tenantId, which is a String.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# The value is our 'Message' Java object, serialized to JSON.
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# --- CONSUMER SETTINGS ---
# The key of the received message will be the tenantId as a String.



# What to do when a new consumer group starts: 'earliest' means read from the beginning of the topic.
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.LongDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# CRITICAL: A security setting to tell the JSON deserializer which Java packages it can trust.
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.MessageService.message.entity,com.example.MessageService.security.entity,com.example.MessageService.template.entity

# SMTP Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${email}
spring.mail.password=${passwordEmail}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true